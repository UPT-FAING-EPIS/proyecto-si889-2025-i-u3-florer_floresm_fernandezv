name: Deploy Frontend & Backend

on:
  workflow_dispatch:
    inputs:
      deploy_reason:
        description: 'RazÃ³n del deploy'
        required: false
        default: 'Deploy manual'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      API_OPENAI_KEY: ${{ secrets.API_OPENAI_KEY }}
      CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # FRONTEND: Build y deploy a S3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install frontend dependencies
        working-directory: ./DictApp/DataDicGen.Frontend
        run: npm install --frozen-lockfile

      - name: Build frontend
        working-directory: ./DictApp/DataDicGen.Frontend
        run: npm run build

      - name: Deploy frontend to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: ./DictApp/DataDicGen.Frontend/dist

      # BACKEND: Build y deploy a Elastic Beanstalk
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore backend dependencies
        working-directory: ./DictApp/DataDicGen.WebAPI
        run: dotnet restore      
      - name: Publish backend
        working-directory: ./DictApp/DataDicGen.WebAPI
        run: dotnet publish -c Release -o publish

      - name: Zip backend artifact
        working-directory: ./DictApp/DataDicGen.WebAPI/publish
        run: zip -r ../backend.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create Elastic Beanstalk application if not exists
        run: |
          aws elasticbeanstalk describe-applications --application-names datadicgen-backend || \
          aws elasticbeanstalk create-application --application-name datadicgen-backend --description "Data Dictionary Generator Backend API"      
      - name: Deploy backend to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: dictapp-backend-v2
          environment_name: Dictapp-backend-v2-env
          region: ${{ secrets.AWS_REGION }}
          version_label: github-${{ github.run_number }}
          deployment_package: ./DictApp/DataDicGen.WebAPI/backend.zip
          existing_bucket_name: ${{ secrets.AWS_S3_BUCKET }}

      # NOTA: Las variables de entorno (ConnectionStrings__DefaultConnection y OpenAI__ApiKey)
      # deben configurarse directamente en la consola de AWS Elastic Beanstalk
      # en Configuration > Software > Environment properties
